1. Import event log 
   1. XES, CSV
2. Discover a petri net process model
   1. Choose process discovery algorithm
3. Enrich  Petri net
   1. Performance analysis
   2. Probability Information
   3. Optional:
      1. Role information
      2. Decision Point Analysis
4. Create GUI
   1. Import log csv/xes
   2. Change Service time...

------------------------------------------

1. Import an event log (XES, CSV)
---------------------------------
- Description:

The event log (in XES or CSV format) is imported to the server/backend by the user. The event logs must record the scheduling, the start, and the completion of an activity along with the time stamp, a performer, and some additional data.
The user can specify the event log file to upload using file path in curl command. The file is then stored in an appropriate location in the server.

- Priority: This user feature is of high priority.

- Stimulus/Response Sequences: Block diagram?

- Functional Requirements:
	- The event logs must record the scheduling, the start, and the completion of an activity along with the time stamp, a performer, and some additional data.
	- The user specifies the event log file to upload using file path in curl command.
	- The event log is validated in the server, i.e, the file type and the content is checked.
	- If the file is invalid, it returns a message "The event log file is not valid".
	- If the file is valid, the file is stored in an appropriate location in the server for further processing and a sucess message is displayed in the GUI along with a unique identifier for the event log.

- API Specification:
	- POST /eventlog
Input: Event log file (Filetype: XES or CSV)
Output: 
 HTTP Response 200 OK
 {
	"event_log_id": <EVENT_LOG_UNIQUE_IDENTIFIER>
	"message": "Event log uploaded sucessfully"	
 }
 HTPP Response 400 Bad Request
 { 
	"message": "The event log file is not valid"
 }


2. Discover a process model in the form of petri net
----------------------------------------------------
- Description:

From the event log imported (refered by its unique identifier), a control-flow discovery algorithm is applied to automatically create a process model that reflects the causal relations between the examination activities in the log. This process model is in the form of petri net. 

[Remove: *****Choices, redundancy, and sequences should be clear for simulation]

- Priority: This user feature is of high priority.

- Stimulus/Response Sequences: Block diagram?

- Functional Requirements:
	- Process model is discovered on the event log refered by its unique identifier
	- If the event log is not found, return a message "The event log file doesn't exist for the provided identifier"
	- if found, a control-flow discovery algorithm is applied on the event log
	- Process model is outputed as a petri net

- API Specification:
	- GET /processmodel?eventlog=<EVENT_LOG_UNIQUE_IDENTIFIER>
	- Input: Unique identifier of the event log file on which proces model is to be discovered
	- Output: 
		- HTTP Response 200 OK
		{
			"event_log_id": <EVENT_LOG_UNIQUE_IDENTIFIER>,
			"process_model_img": <PROCESS_MODEL_IMAGE>
		}
		- HTPP Response 404 Not Found
		{ 
			"message": "The event log file doesn't exist for the provided identifier"
		}



3. Enrich Petri net with performance information
------------------------------------------------
- Description:

We would like to gain more insight into the performance perspective of the process by enhancing the process model with information about arrival rate of process, activity service time (execution times and waiting times) and the probabilities for taking alternative paths.
The arrival rate of a process is defined as number of new cases arrive per time unit (on average) at the process. The execution time is the time between the start and the completion of the activity. The waiting time is the time between the point at which the last activity that is a direct predecessor of this activity was completed and the moment at which the execution of the activity itself is started. 

[Email: ************Extract the number of resources for each activity

- Priority: This user feature is of high priority.

- Stimulus/Response Sequences: Block diagram?

- Functional Requirements:
	- Process model is discovered and enriched on the event log refered by its unique identifier
	- If the event log is not found, return a message "The event log file doesn't exist for the provided identifier"
	- If found, a control-flow discovery algorithm is applied on the event log to generate a process model
	- Enhance the process model with information about the arrival rate of cases. This can be derived from the start times of the first activity in each process instance.
	- Enhance the process model with information about execution times and waiting times for the activities. Extract this information using the timestamp from ‘start’ and ‘complete’ event in the event log.
	- Enhance the process model with information about the probabilities of alternative paths based on how often each path was followed during log replay.
	- Specify the execution and waiting times in terms of a normal distribution, by calculating their mean and variance values for each activity.
	- All the mentioned above values are measured in minutes.
	- Process model is outputed as a petri net

- API Specification:
	- GET /processmodel/enriched?eventlog=<EVENT_LOG_UNIQUE_IDENTIFIER>
Input: Unique identifier of the event log file on which proces model is to be discovered and enriched
Output: 
 HTTP Response 200 OK
 {
	"event_log_id": <EVENT_LOG_UNIQUE_IDENTIFIER>,
	"process_model_img": <PROCESS_MODEL_IMAGE>
 }
 HTPP Response 404 Not Found
 { 
	"message": "The event log file doesn't exist for the provided identifier"
 }


4. Create GUI for importing logs
--------------------------------
- Description:
	Improve the user experience by providing a web UI to allow users to upload the event log for which the process model is to be discovered. The user uploads the event log file by selecting the file in a file explorer dialog.

- Priority: This user feature is of medium priority.

- Stimulus/Response Sequences: Block diagram?

- Functional Requirements:
	- On clicking the upload button, a file explorer dialog opens where the user can select the event log file.
	- Show progress indicator when the file is being uploaded to the server.
	- On success, display the server APIs success message and the computed process model petri net on the UI.
	- On failure, display the failure message on the UI.
